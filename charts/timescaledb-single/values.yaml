replicaCount: 3

# To prevent very long names, we override the name, otherwise it would default to
# timescaledb-single (the name of the chart)
nameOverride: timescaledb

image:
  # Image was built from
  # https://github.com/timescale/timescaledb-docker-ha
  repository: timescaledev/timescaledb-ha
  tag: 78603166-pg11-custom
  pullPolicy: IfNotPresent

# Credentials used by PostgreSQL and Patroni
# https://github.com/zalando/patroni/blob/master/docs/SETTINGS.rst#postgresql
# https://github.com/zalando/spilo/blob/master/ENVIRONMENT.rst
credentials:
  superuser: tea
  admin: cola
  standby: pinacolada

# Distribution Configuration stores
# Please note that only one of the following stores should be enabled.
kubernetes:
  dcs:
    enable: true
  configmaps:
    enable: false

backup:
  enable: false
  s3Bucket: my_example_s3_bucket_for_backups
  # These secrets should contain an IAM access key ID and a secret access key:
  # https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html
  # They correspond to repo1-s3-key and repo1-s3-key-secret of this manual
  # https://pgbackrest.org/configuration.html#section-repository/option-repo-s3-key
  accessKeyId: examplekeyid
  secretAccessKey: examplesecret+D48GXfDdtl823nlSRRv7dmB
  jobs:
      # name: needs to adhere to the kubernetes restrictions
      # type: can be full, incr or diff, see https://pgbackrest.org/user-guide.html
      # schedule: https://en.wikipedia.org/wiki/Cron#CRON_expression
    - name: full-weekly
      type: full
      schedule: "12 02 7 * *"
    - name: incremental-daily
      type: incr
      schedule: "12 02 1-6 * *"

# Extra custom environment variables.
env: {}

patroni:
  postgresql:
    parameters:
      shared_preload_libraries: timescaledb,pg_stat_statements
      # Adding the directory where the pgdata is volume is mounted to the socket dirs
      # allows other pods in the container to connect using the socket. The pgBackRest sidecar
      # for example needs this
      unix_socket_directories: "/var/run/postgresql,/home/postgres/pgdata"
      archive_command: "pgbackrest --stanza=poddb archive-push %p"

persistentVolume:
  enabled: true
  size: 1G
  ## database data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  subPath: ""
  mountPath: "/home/postgres/pgdata"
  annotations: {}
  accessModes:
    - ReadWriteOnce

resources: {}
  # If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
nodeSelector: {}

# https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinityTemplate: |
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        topologyKey: "kubernetes.io/hostname"
        labelSelector:
          matchLabels:
            app:  {{ template "timescaledb.name" . }}
            release: {{ .Release.Name | quote }}
affinity: {}

## Use an alternate scheduler, e.g. "stork".
## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
##
# schedulerName:

rbac:
  # Specifies whether RBAC resources should be created
  create: true

serviceAccount:
  # Specifies whether a ServiceAccount should be created
  create: true
  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name:
