# This file and its contents are licensed under the Apache License 2.0.
# Please see the included NOTICE for copyright information and LICENSE for a copy of the license.

{{- /*
This ConfigMap contains scripts, like bootstrap scripts for the backup and archive scripts for
archive_command
*/ -}}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "timescaledb.fullname" . }}-scripts
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "timescaledb-helm.labels" . | indent 4}}
    app.kubernetes.io/component: scripts
data:
  tstune.sh: |-
    {{- .Files.Get "scripts/tstune.sh" | nindent 4 }}
  pgbackrest_archive.sh: |
    #!/bin/sh

    # If no backup is configured, archive_command would normally fail. A failing archive_command on a cluster
    # is going to cause WAL to be kept around forever, meaning we'll fill up Volumes we have quite quickly.
    #
    # Therefore, if the backup is disabled, we always return exitcode 0 when archiving

    log() {
        echo "$(date '+%Y-%m-%d %H:%M:%S') - archive - $1"
    }

    [ -z "$1" ] && log "Usage: $0 <WALFILE or DIRECTORY>" && exit 1

    PGBACKREST_BACKUP_ENABLED={{ or .Values.backup.enable .Values.backup.enabled | int }}
    [ ${PGBACKREST_BACKUP_ENABLED} -ne 0 ] || exit 0

    : "${ENV_FILE:=${HOME}/.pgbackrest_environment}"
    if [ -f "${ENV_FILE}" ]; then
      echo "Sourcing ${ENV_FILE}"
      . "${ENV_FILE}"
    fi

    exec pgbackrest --stanza=poddb archive-push "$@"
  pgbackrest_archive_get.sh: |-
    {{- .Files.Get "scripts/pgbackrest_archive_get.sh" | nindent 4 }}
  pgbackrest_bootstrap.sh: |-
    {{- .Files.Get "scripts/pgbackrest_bootstrap.sh" | nindent 4 }}
  pgbackrest_restore.sh: |
    {{- .Files.Get "scripts/pgbackrest_restore.sh" | nindent 4 }}
  restore_or_initdb.sh: |
    {{- .Files.Get "scripts/restore_or_initdb.sh" | nindent 4 }}
  post_init.sh: |-
    {{- .Files.Get "scripts/post_init.sh" | nindent 4 }}
  patroni_callback.sh: |-
    {{- .Files.Get "scripts/patroni_callback.sh" | nindent 4 }}
  lifecycle_preStop.psql: |-
    {{- .Files.Get "scripts/prestop.psql" | nindent 4 }}
...
