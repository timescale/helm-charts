# So, Helm is all yaml. Except the schema, which needs to be written in JSON
# Some arguments as to why can be found here:
# https://github.com/helm/helm/issues/5812
#
# In this repository, we decide to use yaml anyway, as we don't have a single JSON
# file lying around, nor can we use comments in the JSON file.
#
# This (yaml) file can be converted to the correct json file using `make json-schema`
# the linter will warn any developer about drift that exists between this yaml file
# and its json counterpart
schema: http://json-schema.org/draft-07/schema#
required:
- affinity
- affinityTemplate
- backup
- bootstrapFromBackup
- callbacks
- debug
- fullWalPrevention
- image
- loadBalancer
- nameOverride
- networkPolicy
- nodeSelector
- patroni
- persistentVolumes
- pgBouncer
- podAnnotations
- podManagementPolicy
- prometheus
- rbac
- readinessProbe
- replicaCount
- replicaLoadBalancer
- resources
- secrets
- serviceAccount
- serviceMonitor
- sharedMemory
- timescaledbTune
- tolerations
additionalProperties: false
properties:
  serviceMonitor:
    type: object
  podManagementPolicy:
    type:
    - string
  postInit:
    description: |
      postInit allows you to configure additional scripts that will be run once
      directly after initialization of the database. It takes a list of VolumeProjection,
      every .sh, .sql, and .sql.gz script will be executed in sorted order and they should
      return exitcode 0 on success.
    type:
    - array
    - "null"
    items:
      type: object
      additionalProperties: false
      properties:
        configMap:
          type: object
        secret:
          type: object
  timescaledbTune:
    description: |
      timescaledb-tune will be run with the Pod resources requests or - if not set - its limits.
      This should give a reasonably tuned PostgreSQL instance.
      Any PostgreSQL parameter that is explicitly set in the Patroni configuration will override
      the auto-tuned variables.
    type: object
    additionalProperties: false #ok
    properties:
      enabled:
        type: boolean
        default: true
      args:
        description: |
          For full flexibility, we allow you to override any timescaledb-tune parameter below.
          However, these parameters only take effect on newly scheduled pods and their settings are
          only visibible inside those new pods.
          Therefore you probably want to set explicit overrides in patroni.bootstrap.dcs.postgresql.parameters,
          as those will take effect as soon as possible.
          https://github.com/timescale/timescaledb-tune
        type: object
        default: {}
        examples:
        - max_conns: "120"
          cpus: "5"
          memory: "4GB"
  schedulerName:
    type: string
  bootstrapFromBackup:
    type: object
    additionalProperties: false
    properties:
      enabled:
        type: boolean
      repo1-path:
        type:
        - string
        - "null"
      secretName:
        type:
        - string
        - "null"
  persistentVolumes:
    type: object
    additionalProperties: false
    properties:
      data:
        "$ref": "#/definitions/volume"
      wal:
        "$ref": "#/definitions/volume"
      tablespaces:
        type: object
        additionalProperties:
          "$ref": "#/definitions/volume"
  readinessProbe:
    type: object
    additionalProperties: false
    properties:
      successThreshold:
        type: integer
        minimum: 1
      timeoutSeconds:
        type: integer
        minimum: 1
      enabled:
        type: boolean
        default: true
      failureThreshold:
        type: integer
        minimum: 1
      initialDelaySeconds:
        type: integer
        minimum: 0
      periodSeconds:
        type: integer
        minimum: 1
  service:
    primary:
      "$ref": "#/definitions/service"
    replica:
      "$ref": "#/definitions/service"
  loadBalancer:
    "$ref": "#/definitions/loadBalancer"
  replicaLoadBalancer:
    "$ref": "#/definitions/loadBalancer"
  fullWalPrevention:
    type: object
    additionalProperties: false
    properties:
      enabled:
        type: boolean
      checkFrequency:
        type: integer
        minimum: 1
        maximum: 900
      thresholds:
        type: object
        additionalProperties: false
        properties:
          readOnlyFreePercent:
            "$ref": "#/definitions/percent"
          readOnlyFreeMB:
            type: integer
            minimum: 0
          readWriteFreePercent:
            "$ref": "#/definitions/percent"
          readWriteFreeMB:
            type: integer
            minimum: 0
  sharedMemory:
    type: object
    additionalProperties: false
    properties:
      useMount:
        type: boolean
        default: false
  callbacks:
    type: object
    additionalProperties: false
    properties:
      configMap:
        type:
        - string
        - "null"
  envFrom:
    type:
    - array
    - "null"
  resources:
    type: object
    additionalProperties: false
    properties:
      limits:
        type: object
        additionalProperties:
          type: string
      requests:
        type: object
        additionalProperties:
          type: string
  affinity:
    type: object
    additionalProperties: false
  affinityTemplate:
    type: string
  serviceAccount:
    type: object
    additionalProperties: false
    properties:
      create:
        type: boolean
      name:
        type:
        - string
        - "null"
  rbac:
    type: object
    additionalProperties: false
    properties:
      create:
        type: boolean
  patroni:
    type: object
    properties:
      restapi:
        type: object
        properties:
          listen:
            type: string
            enum:
            - 0.0.0.0:8008
      bootstrap:
        type: object
        properties:
          dcs:
            type: object
            properties:
              synchronous_mode:
                type: boolean
              synchronous_mode_strict:
                type: boolean
              master_start_timeout:
                type: integer
                minimum: 0
              maximum_lag_on_failover:
                type: integer
                minimum: 0
              retry_timeout:
                type: integer
                minimum: 1
              ttl:
                type: integer
                minimum: 10
              use_pg_rewind:
                type: boolean
              loop_wait:
                type: integer
                minimum: 5
                maximum: 120
                default: 10
              postgresql:
                type: object
                additionalProperties: false
                properties:
                  use_pg_rewind:
                    type: boolean
                  use_slots:
                    type: boolean
                  restore_command:
                    type: string
                  parameters:
                    # There are so many parameters and types for postgresql.conf
                    # that restricting them here would probably not be useful
                    type: object
          method:
            type:
            - string
            - "null"
          post_init:
            type:
            - string
            - "null"
          restore_or_initdb:
            type: object
            additionalProperties: false
            properties:
              command:
                type: string
              keep_existing_recovery_conf:
                type: boolean
      kubernetes:
        type: object
        properties:
          use_endpoints:
            type: boolean
        additionalProperties:
          type:
          - string
          - boolean
      log:
        type: object
      postgresql:
        type: object
        properties:
          callbacks:
            type: object
            additionalProperties:
              type: string
          listen:
            type: string
            enum:
            - "0.0.0.0:5432"
          pgbackrest:
            type: object
            properties:
              no_master:
                type: boolean
              no_params:
                type: boolean
              command:
                type: string
              keep_data:
                type: boolean
          authentication:
            type: object
            additionalProperties:
              type: object
              additionalProperties:
                type: string
          basebackup:
            type:
            - array
            - "null"
            items:
              type: object
              additionalProperties:
                type: string
          create_replica_methods:
            type: array
            items:
              type: string
            additionalProperties: false
          pg_hba:
            type: array
            items:
              type: string
          recovery_conf:
            type: object
            additionalProperties:
              type: string
          use_unix_socket:
            type:
            - boolean
            - "null"
  prometheus:
    type: object
    additionalProperties: false
    properties:
      enabled:
        type: boolean
      env:
        type:
        - array
        - "null"
        items:
          type: object
      image:
        type: object
      volumes:
        type:
        - array
        - "null"
        items:
          type: object
      volumeMounts:
        type:
        - array
        - "null"
        items:
          type: object
  networkPolicy:
    type: object
    additionalProperties: false
    properties:
      enabled:
        type: boolean
      prometheusApp:
        type: string
      ingress:
        type:
        - array
        - "null"
        items:
          type: object
  pgBouncer:
    type: object
    additionalProperties: false
    description: |
      pgBouncer does connection pooling for PostgreSQL
      https://www.pgbouncer.org/
      enabling pgBouncer will run an extra container in every Pod, serving a pgBouncer
      pass-through instance
    properties:
      pg_hba:
        description: |
          The pg_hba configuration that will be used by pgBouncer
        type: array
        items:
          type: string
      userListSecretName:
        description: |
          A pointer to a SecretName containing user/password pairs in the format expected by pgbouncer
          https://www.pgbouncer.org/config.html#authentication-file-format
        type:
        - string
        - "null"
      enabled:
        type: boolean
        default: false
      port:
        type: integer
        default: 6432
        enum:
        - 6432
      config:
        type:
        - object
        - "null"
  nodeSelector:
    type: object
  podAnnotations:
    type: object
    additionalProperties:
      type: string
  tolerations:
    type: array
  debug:
    type: object
    additionalProperties: false
    properties:
      execStartPre:
        type:
        - string
        - "null"
  env:
    type:
    - array
    - "null"
  backup:
    type: object
    additionalProperties: false
    required:
    - enabled
    - pgBackRest
    - jobs
    properties:
      enabled:
        type: boolean
      pgBackRest:
        type:
        - object
        - "null"
      "pgBackRest:archive-get":
        type:
        - object
        - "null"
      "pgBackRest:archive-push":
        type:
        - object
        - "null"
      jobs:
        type: array
      env:
        type:
        - array
        - "null"
      envFrom:
        type:
        - array
        - "null"
  secrets:
    type: object
    additionalProperties: false
    properties:
      credentialsSecretName:
        type: string
      credentials:
        type:
        - object
        - "null"
      certificateSecretName:
        type: string
      certificate:
        type:
        - object
        - "null"
      pgbackrestSecretName:
        type: string
      pgbackrest:
        type:
        - object
        - "null"
  image:
    type: object
    additionalProperties: false
    properties:
      repository:
        type: string
        minLength: 1
      tag:
        type: string
        minLength: 1
      pullPolicy:
        type: string
        enum:
        - Always
        - Never
        - IfNotPresent
  replicaCount:
    type: integer
    minimum: 0
  clusterName:
    type:
    - string
    - "null"
    minLength: 1
    maxLength: 30
  version:
    type:
    - integer
    - "null"
    minimum: 11
    maximum: 14
  nameOverride:
    type:
    - string
    - "null"
    minLength: 1
definitions:
  percent:
    type: integer
    mimimum: 0
    maximum: 100
  service:
    type: object
    additionalProperties: false
    properties:
      type:
        type: string
        enum:
        - ClusterIP
        - LoadBalancer
        - NodePort
      port:
        type: integer
        minimum: 1000
        maximum: 65535
      nodePort:
        type: integer
        minimum: 1000
        maximum: 65535
      labels:
        type:
        - object
        - "null"
        additionalProperties:
          type: string
      annotations:
        type:
        - object
        - "null"
        additionalProperties:
          type: string
      spec:
        type:
        - object
        - "null"
        additionalProperties:
          type: string
  loadBalancer:
    type: object
    additionalProperties: false
    properties:
      spec:
        type:
        - object
        - "null"
      enabled:
        type: boolean
      port:
        type: integer
        minimum: 1000
        maximum: 65535
      annotations:
        type: object
        additionalProperties:
          type: string
  volume:
    type: object
    additionalProperties: false
    properties:
      enabled:
        type: boolean
      size:
        type: string
      subPath:
        type:
        - string
        - "null"
      storageClass:
        type:
        - string
        - "null"
      mountPath:
        type: string
      annotations:
        type: object
        additionalProperties:
          type: string
      accessModes:
        type: array
        items:
          type: string
